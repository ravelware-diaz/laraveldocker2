FROM php:7.4-fpm

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/

# Set working directory
WORKDIR /var/www
# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    jpegoptim optipng pngquant gifsicle \
    vim \
    gnupg \
    gnupg1 \
    gnupg2 \
    unzip \
    git \
    libzip-dev \
    libicu-dev \
    curl --fix-missing

# RUN pecl config-set php_ini /etc/php/7.4/fpm/php.ini
# RUN pecl install sqlsrv
# RUN pecl install pdo_sqlsrv
# RUN printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini
# RUN printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini
# RUN exit
# RUN phpenmod -v 7.4 sqlsrv pdo_sqlsrv
# Clear cache
RUN curl -s https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN bash -c "curl -s https://packages.microsoft.com/config/ubuntu/18.04/prod.list > /etc/apt/sources.list.d/mssql-release.list"
# RUN apt-get install software-properties-common -y
# RUN add-apt-repository --remove ppa:ondrej/php
RUN apt-get update
# RUN add-apt-repository ppa:ondrej/php
# RUN apt-get update
RUN ACCEPT_EULA=Y apt-get -y install msodbcsql17 mssql-tools
RUN apt-get -y install unixodbc-dev
RUN apt-get -y install gcc g++ make autoconf libc-dev pkg-config
# RUN apt-get install php7.4-sybase
RUN pecl config-set php_ini /usr/local/etc/php/conf.d/php.ini
# RUN pecl config-set php_ini /etc/php/7.4/fpm/php.ini
RUN pecl install sqlsrv
RUN pecl install pdo_sqlsrv
RUN printf "; priority=20\nextension=sqlsrv.so\n" > /usr/local/etc/php/conf.d/sqlsrv.ini
RUN printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /usr/local/etc/php/conf.d/pdo_sqlsrv.ini


RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install extensions
RUN docker-php-ext-install zip exif pcntl intl
RUN docker-php-ext-install gd

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Add user for laravel application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Copy existing application directory contents
COPY . /var/www

# Copy existing application directory permissions
COPY --chown=www:www . /var/www

# Change current user to www
USER www

# Expose port 9000 and start php-fpm server
EXPOSE 9000
EXPOSE 8000
CMD ["php-fpm"]